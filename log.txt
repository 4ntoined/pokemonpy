30 september 2020
decided to start a dedicated log
started work on a "pokedex" to store information for pokemon like stat details so they can be called upon in the code
ran into some trouble with getting astropy tables to let me store a numpy array in the table
found a work around but i don't like it
debating whether or not i like representing the pokemon types as numbers, especially directly to the player
but the numbers are very convenient for coding like...
bruh idk

4 october 2020
hello. added contact details for all the moves and updated the movedex
about to add more pokemon to the pokedex and set the main code so that it prints the pokedex on start up
lit we love a log hello future people.

5 october 2020
forgot to update the log.
threw some pokemon in the pokedex (the kanto starters and johto box mascots)
added pokedex functionality to the main code so players can use preset stats and typings
9:10PM- uhh guess we're doing times now
added a type table along with the pokedex, easy to print, kinda pretty to look at, and probably convenient for coding idk i already had the strings in a list so the type index <-> type string relation was already there but i made the table ANYWAY so here we are
10:08PM- added recoil damage :P

6 october 2020
12:26AM- started working on revamping the battling, especially stat stages...but obstensibly...everything else as well

10 october 2020
6:54PM- paralyzed pokemon have speed cuts, burned pokemon take attack cuts, pokemon may be fully paralyzed 25% of time, need to fo posion, current no moves in the game cause poison so theres that
i may have also worked out stat stages in battle, the move side of that is less developed
ugh
11:36PM- big changes
rearranged the battle code so it works better, i think idk i didnt get to test it, its not finished yet
i think most of it should work it's only a matter of cleaning up the end of turn things like poison damage, burn damage, etc.
implementation of these things is still not yet there
it's getting there
oh you can set the opponent's pokemon team now i think

11 october 2020
1:57AM- okay finished up a solid amount of work and now it's definitely broken
so that's cool can't wait to have to fix that
10:32A- battling mostly works now, still some bugs around pokemon faint/switch in that need to be resolved
mostly committing rn so i can work on this on not my cell phone
2:32P- ended up not fixing the battle problems at all and instead worked on the move tutor, pokedex selection, pokemon screen, etc.
cleaning up the UI, usage of b AND B to go back, getting generally handier with try except else blocks
lets get it
fixed sandstorm giving boost to ghost type instead of rock type lmao
9:06P- you can save and load pokemon now cause yeah i'm that serious about this
11:08P- uhh refined loading save files to catch bad file paths and incorrectly structered save files

14 october 2020
8:45P- maybe fixed the battling system? Idk i instituted some checks so that pokemon fainting and switch and the like goes smoothly.
i only tested it a little but it seemed like i fixed some bugs
really the only way to really test this is to REALLY play it...it's getting pretty complex at this point, especially with the save files...like you can get invested in this
too many
10:16P- programmed in paralysis burn and poison, though currently no moves cause poison

16 october 2020
7:39P- kinda did the damn thing with PP

17 october 2020
4:19P- okay just did a lot lemme think:
struggle
stat stages
can't switch to a pokemon that's already battling
that might be it, it doesn't look like a lot written down but i promise you it was a lot
gonna do a couple commits because im worried i maybe broke it somewhere
10:21P- wanted to document somewhere that there is distinctly an issue where the game checks for poison/burn/etc. damage even if the pokemon was just switched in...
gotta fix that

21 october 2020
bruh
added flinching
started refining pokemon battle architecture, really no idea where it's headed
but changes are definitely due
building a little team for cynthia including new moves so that's fun
we'll probably set up some sort of trainer variable to hold the opponent's name
lit
4:47P- don't even remember what I did tbh
finished cynthia's team
battled a couple of times, everything seems to flow
it's nice
uhh i think the next addition to the battling should be a "status" option
since stat stages should in theory work now it'd be nice to actually see them in action
i'm thinking we can show the user their pokemon's augmented, effective stats and everything
#EXPOSED
idk we'll see
5:15P- okay removed old/obsolete files from depository
also i forgot to note in that last note that i added tools to reset your team and remove unwanted pokemon
need to also add functionality to change leading pokemon
5:43P- okay added changing lead pokemon
still working and b and B for back :(

22 october 2020
11:04A- gotta add renaming pokemon
4:04P- gotta add ability to set battle stage: weather, terrain, etc.

23 october 2020
3:07P- didnt do any of the things I listed just yesterday, but accuracy and evasion stats have been implemented
4:01P- i keep just adding things, not testing the code, forgetting what i changed, and then assuming everything works
that preface was so i could say i added sandstorm and hail damage
i think also some fixed some bugs in the battle code that went covertly unnoticed
bro why did gamefreak do all this and why does it slap
like they got everybody hooked on this to where i'm hooked on emulating it
well hope this works

24 october 2020
11:57A- added weather moves and changing weather
8:58P- high critical hit ratio moves are implemented

26 october 2020
9:15P- yo revamped status conditions so that i dont need a separate block of code for moves with different chances of causing the various things they caused
i kinda just stole the method i had already devised for the stat changes, and like it works so let's put it to work idk
still havent tested any of this of course, also kinda not done, need to fix how recoil and flinch are implemented
it's mostly busy work honestly i still need to reorder the battling mechanics
and implement all the different moves.....leech seed has been in the back of my mind for so long...
anyway here's a commit, a proof of concept if you will

27 october 2020
8:50A- fixed recoil and bug new statuses, np.argwhere works better when its checking a numpy array, rather than just a list
but otherwise checking a numpy array (with its determined data type) for particular strings elicits python feedback that id rather avoid in the middle of battle
the solution is to make the notes list a np array when we need to run it through argwhere, elsewise leave it a lowly list
no i did not test the code

28 october 2020
3:14P- pi time, nice
edited the todo list to reflect recent additions
small edits to moves.py
dk where we're headed rn tbh but we're def gonna get there
3:44P- noting for the record that crits are supposed to ignore stat nerfs of attacker and stat boosts of target
someone'll get around to fixing that I'm sure
4:00P- reworking damage function rn to fix the critical hits:
crits occur within damage() which only takes a few pokemon attributes, and NOT their stat changes, so those aren't available for use to calculate critical hit damage
so we're redoing damage() to take the two pokemon entirely, not just some attributes, hope it doesn't kill this code
4:30P- done redoing damage() i hope
realized there's some ambiguity as to when things should go in hit() and when they should go in move()
hit() is only ever called in the end of move(), so anything that happens after hit() in move might as well have been appended to hit(), right?
is the choice arbitrary? is one better than the other? i really don't know team
anyway it still works i did actually test it this time
well tackle works so damage() is functional but who knows about umm...everything else in pokemon
5:07P- finished editing the log...lol
6:42P- priority moves..
7:02P- battling was in fact broken, physical moves worked, specials didn't because the burn variable was never defined
anyway terrains are in
not all the things that terrains affect i.e. causing sleep/confusion, priority..........
8:10P- okay terrains are mostly implemented wherever i could find to implement them
no priority moves yet for psychic terrain to prevent,
ugh earthquake is already in the game i can add that
okay i'll do that soon i guess
still no moves that cause confusion, so nothing to cause confusion, so nowhere to set misty terrain to prevent confusion
but we'll get to that soon i guess as well
tired
11:55P- reworked battling all the way, might be broken idk it looks like charmanders hp isnt recalculating after taking sandstorm damage for some reason
we'll fix it later

29 october 2020
8:43A- another day, another log entry for me to go overboard for
I have work to do today, otherwise battling system is coming along well
need to check for either trainer blackout immediately after moves are used and not after end of turn damages and weather are prompted
so we'll check for that after moves, if it is the case that neither trainer has blackout out, we can run switch in, after end turn damages, and even without checking for blackout then
alright..

30 october 2020
7:16P- didn't do that other things about checking for blackouts right after the moves are used
instead implemented terrain moves
feel like I keep saying terrains are mostly done and then documenting how terrains were even further integrated
idk they really are mostly done now, disregarding the things that just aren't in the code yet
7:52P- did the thing i wrote about yesterday, works p well
also properly implemented status moves causing status conditions
guess we'll move on to confusion/freeze/sleep? still need to program those
ugh they all need counters, i really lost
9:10P- tried to add some new moves, went and started tweaking inflicting status conditions (via status moves, not damaging moves)
thinking it'll prob be easier to make these callable functions
anyway i didn't quite finish, tried testing it, after inflicting luxray with sleep (which has no functionality yet) i tried inflicting poison, and bulbasaur used the move and that was it nothing more happened, especially not a "luxray already has a status condition, which I was expecting
anyway I'm tired I'll be back later bye future people
9:20P- moves.py wont work in terminal, (even though) the main code works it just fine, whatever goodbye again

2 november 2020
3:32P- we love a hiatus
gonna idk fix statuses i guess
4:27P- fixed that thing from the last log, moves.py not working and luxray not being poisoned were related,
accidentally included an extra 2 in the poison powder info
BOI
5:23P- moved around some things in the status moves status conditions
hopefully it works better but rn it seems like an evenly lateral move to me
idk this flow makes more sense to me lets hope thats because its more sensible
uhh i think the very next goal is to implement sleep, freeze, and badPoison
then i *think* i will be truly done with the main status conditions yas
6:34P- uhh sleep has a counter now, bad poison is maybe fully functional?
need to do freeze and sleep preventing move usage, and fixing all this implementation w damage-dealing moves
7:42P- status conditions may be done it depends on how much i forgot i still had to do
added toxic and maybe confuse ray is next we'll see if i can remember
idk gonna commit ttyl
8:11P- very fun and sexy of me to have forgotten to add confuse ray that quickly
anyway confuse ray is here now, she confuses, we livin
uhhh also fire moves used on mons need to dethaw them, certain fire moves (some of which are already in the game ie Flare Blitz) when used by a frozen mon, dethaws them
okay thats enough work for today bye yall

3 november 2020
7:34A- election day :(
last night i randomized the opponent movesets so thats fun!
its fun being hit w something other than tackle even though i died immediately
9:59A- fire moves thaw the target and flare blitz and flame wheel thaw a frozen user
it's lit
11:07A- made afflicting status a function of mon() now, so now move() and hit() call afflictStatuses() instead of doing all that work right there
i also rearranged the functions in mon() for my own sanity
5:37P- reorganized battling again in an effort to add having to rest after big moves like hyper beam blast burn etc.
actually tested the code, it seems to work
it's umm...how they say, lit..
11:07P- hey gossip girl, added moveInfo() function to show a neat description of a move
think this needs to be added to pokemon battles as well and maybe move tutor? we'll definitely see about it
anyway commiting this
11:50P- TIRED, cleaned up move info display implemented it in [P]okemon and in pokemon in battle and in being forced to switch out in battle because of a faint
so most places
move deleter should come next i think

4 november 2020
12:29A- move deleter is up and running now
very tired
1:11A- cleaned up a lot of the stuff and expanded move info to move tutor screen
so that's all very good
wanted to jot down a note here but i forgot it
9:30A- minor edits in places, tying up loose ends, bug fixes, etc
next big thing should be uhh either natures or weather ball or user set battle setting
idk i'll figure it out
10:15A- need to stop user from starting a battle if they have no non-fainted pokemon

6 nov 2020
5:25P- tags
gotta pop tags
cleaned up load pokemon to catch illegal levels and types
just realized I should be checking for negative numbers in ivs and evs as well
okay I'll be back i guess
6:02P- okay i'm back
controlled for negative levels, negative evs and ivs, and non-positive base stats
also got rid of a lot of the variables in loadMon() in general
actually i just thought about it and i could probably deal with files with 1 line and files with multiples lines in one go
the data is already inputted as a numpy array, i could easily reshape the 1D arrays into 2D,
to mirror how the multi-poke savefiles are already structured...a bunch of lines...
UGH okay i'll be back
6:14P- back again....
yeah loadMon() is looking _sleek_ now
don't know where I'm headed now?
uhh i wanted to show status conditions in the battle UI
so maybe that
I also wanted to implement more weather dependant moves
okay too many
7:44P- umm you can check on stat stages, status conditions, etc. in battle now with [s]
we love innovation
need more moves...

7 november 2020
5:21P- added weather ball
started working on the solar moves, and so as well the infrastructure for 2-turn moves
7:45P- think i figured out 2-turn moves for the user, but they are a little broken for opponents
also haven't properly figured out the pp-situation w/ 2-turns
but im tired now

9 november 2020
8:14A- not working on the code rn but pp exhaustion should go *in* move, this should help get the 2-turn mess in order
8:33P- shoutout to my past 12 hours yikes lol
gonna look into fixing 2-turn moves no promises
9:23P- bruh the way i just fixed 2-turn moves
still haven't fixed the PP though so watch out for those patch notes soon
10:17P- user can change battle conditions ie weather/terrain

10 november 2020
11:38A- nothing substantial, but im done testing 2turn moves for now i think, so opponent moves and now opponent pokemon are set to be randomized
11:05P- hi what's up
flinching was broken this whole time, I flipped a switch and forgot to unflip it
so pokemon that flinched once would flinch for every subsequent move
i think i fixed it but i didnt test it
I also did something else just now but who could ever recall
oh if you look at a pokemon's summary during a battle, it'll show their effective stats!
so if Bulbasaur's speed stat of 17 becomes like 28 or something after a dragon dance
and now you can just check the summary to check that out
it should also factor in paralysis speed cut, which would apply to pokemon in the party as well (non-battling pokemon don't have stat stages)
anyway I'm tired more work to do so maybe I'll be back later maybe I'll go to sleep
love my sudden use of capital I it's like I suddenly became self-aware in the middle of typing
11:14P- the way I went back to the code only to stare at it, not knowing what to do next

11 november 2020
12:40A- started on getting some more preset pokemon up in here
9:56A- pokemon appraisal is here, also check move info in the same place as selecting a move to use for battle
(lead with "i" or "I" and list whatever moves you wanna know about)
i did other things I think but who could ever know
10:45A- was gonna be finished after writing that last note but the i kept going
added all the pokemon sans Sword&Shield dlc thanks to the work of github user ryanluuwas
(https://github.com/ryanluuwas/Bulbapedia-Web-Scraper)
so that's p nice, i also *think* i fixed it so mons wont be randomly assigned struggle
it should work fine in theory if it's selected and intentionally used,
but it's a little weird for the opponent to throw it out randomly
and it's a 1PP move, whose PP is never exhausted so yeah it had to go
7:50P- added some bugs moves, figured id go through all the types and add whatever moves catch my eye on bulbapedia

22 november 2020
11:48A- I had so much homework...
when you make a pokemon through dex selection it takes on the level of the lead in your party now
i also tweaked the nursery so you give all 6 stats at once...efficiency
8:57P- started work on stealth rock...currently theres only the function of mon() doing stealth tock damage
no idea if it works the way i expect
I probably won't test it until we get some deeper implementation but heres a commit

24 november 2020
10:31A- yeah still haven't really tested anything of course
but i have added moves for the main entry hazards
one of the entry hazards is activated solely via g-max move so thats a little far off
i also started a battle class? dk if it's gonna be useful the way i think its gonna be useful
but im mainly using it to store variable about the battlefield
like it makes sense i think, I will need to work out how this new battle class will interact with
the pokemon class and all the pokemon functions and the like
i should be able to just name an instance of battle() when the player starts a battle and then refer to that same
instance within mon functions like move() right?
like who am i asking when I type all this out it reeks of insanity to me its so funny
alright goodnight

28 november 2020
12:12A- hey i was thinking about entry hazards
there's an issue where, in checking for entry hazrds, there's a need to differentiate
between which side of the field to check for a particular pokemon, and these mon objects
have no capability to store which side of the field they're on
so I'm thinking thats gonna have to be another mon attribute
wait i need to program transform.....i might be able to just copy the mon object no?
more questions for the wind...
12:26A- yeah in other news i fixed a bug with opponent reset where the opponent and the user share the user's pokemon
the solution was python deepcopy()s as opposed to flimsy old copy()s
so i think that works as intended now, i did test it
at some point I will put together more notable teams like i did with Cynthia
and implement them somehow, maybe in like an "Elite Four" mode kinda thing idk
but before I do that I'd want to have more moves programmed
and I feel like if I'm programming moves i should prioritize moves around which I can add yet another
mechanic of pokemon battling
because other moves, though relatively simple to add since the infrastucture already exists, won't push
the code to better emulating pokemon battles. Like who cares if there's Fire Fang, Fire Blast, Flamethrower
and Flare Blitz, if I couldn't figure out Spikes....or semi-invulnerable moves likes Fly and Dig
The semi-invulnerables also sorta give me a preemptive headache only because
they're practically 2-turn moves with an (almost) untouchable first turn
But 2-turn moves are already coded! So will I be able to build off of that and code
these semi-invulnerables as 2-turns with certain special additions?
or will the circumstances of the various 2-turn moves and their many effects
preclude (don't know if that's the right word but we're gonna roll with it) the use of
the pre-existing 2-turn move functionality?
Imagine you're like an anthropologist in like 4030 and you find an ancient github repository and
dig into it to find some grown man talking to himself and playing pokemon in one of the most
tumultuous times in recorded human history....what kinda paper would you write about that

15 january 2021
8:19P- first point of order: hey what's up it's been a while
second: BOY
third: i don't remember which of the many copies of this repo I have lying around is the most recent or what these changes I have staged for commit are so we're just gonna commit and hope for the best
fourth: hey what's up

13 march 2021
5:55P bro it's spring break
somewhere I added a move or something and the newest movedex.dat
(made when i ran the game directly from this repo) needs to be committed!
6:40P- I was looking at the damage calculation and I'm wondering if
I wanna leave open the possibilities of moves with mulitples types
there's only one such move officially, flying press and idk if that even made it to sword and shield?
But the point of this is to break te rules in places we other literally cannot
idk we'll see i still gotta figure out entry hazards
also i should use raise exception more with the error messages
i feel like it'd be cleaner

14 march 2021
1:27P- happy pi daylight saving time
worked on implementing entry hazards, very incomplete rn though
but I need to make a commit because I'm getting tired of looking at this
hopefully I fix it up with another commit soon because this will probably break the game
okay it at least starts running, no telling what happens when you try to play
6:11P- oh boy
got more done with entry hazards...i think i now just need to program in their various effects
most of the other infrastructure is down already its mostly
just adding some attributes to pokemon to do damage or lower speed etcetera

2 apr 2021
5:37P- hey
making progress with entry hazards
i think i'm almost done there's just a lot to do
i am having to add a whole new class and balancing all of its variables like...
this is for FUN
6:53P- stealth rock works
ostensibly all the other entry hazards work as intended
but i've yet to test that much
i still have work to do, poisons need to absorb toxic spikes
and generally i believe there are a lot of loose ends to tie up
but that it seems to work is promising i did that
what's next lol

3 apr 2021
10:35A- fixed some typos with entry hazards
and set grounded poison types to absorb tox spikes
i should do gravity/telekinesis next
sigh, i'll add it to the list

6 apr 2021
6:56P- not doing any coding i think
dropping in to say that telekinesis was removed in gen VIII
while gravity, and magnet rise are still around so that's interesting
the mechanics of those moves (really status effects) are a lot deeper
than i thought at first also like there is a lot to keep track of
also everytime I look into adding a new pokemon mechanic I am
more and more certain that we are never making it to double battles
honestly such a simple premise but utterly opaque when it comes to this python code I've got set up
(I feel very deep down that it won't even be that difficult to parse out.
the mechanics are almost already there, more pokemon just means intializing more mon() objects
but how they interact and how the code shepard's the user through is going to need to be adjusted)
okay that's enough writing about the things I want to do instead of just doing them for today
maybe i'll be back tomorrow, hopefully with some code

22 apr 2021
9:16A- i have so much homework you would not believe
but i'm going to test entry hazards more rigorously and see what i can see
9:47A- okay i tested stealth rocks and toxic spikes...they seem to work as intended
should probably start thinking about rapid spin and defog oof
idk why movedex.dat wants to be added to the commit bc i swear i didn't touch it
but whatever

29 apr 2021
7:13P- testing the other 2 entry hazards rn
just thought about having to add entry hazard info to [status] for battles
so there's a note about that you're welcome

16 jun 2021
21:30- doin 24-hour time now
i was gonna call it military time but I am fundamentally opposed
so let's just move on
I was thinking about maybe making the battle functionality a python function
so it can be called whenever and wherever in the code
idk that makes more sense to me from a utility standpoint
like the only way to start a battle is from the main menu
and what if i wanna throw you into a battle from somewhere else?
right
21:38- movedex.dat always wants to reupload because moves.py which is called directly by pokemon.py
writes it and explicitly overwrites it so there you go
it's so funny computers always do literally what they're told and if you look closely enough you can see why
anyway gonna add natures
23:43- very sleepy but natures are here
i ran into a little bug where after successfully saving a pokemon, the game loops back to
asking you for a savefile name again, should probably go back to the pokemon summary screen
but natures work p well from what i can tell so far, I havent tested it too extensively though
also as well we need to add somewhere some mechanism for changing a pokemons nature
or beef up the dex selection so that the user can select directly from there
(that functionality is already in the nursery/pokemon creation you're welcome)
someone give me my flowers like....
23:51- also some sort of function to randomize natures so that its not always the default, Hardy
okay goodnight

22 jun 2021
22:42- i just wanna see somethin really quick

24 jun 2021
23:15- i once again wanted to see something
really its repository maintenience(sp?) its boring

11 jul 2021
20:50- can you believe
i added some dragon type moves
I am scheming on using some of these move as an avenue toward more functionality
dragon tail forces the target to withdraw and dragon darts is a multi-hit move
and outrage locks the user into the move for a varying number of turns 2/3
so I may need to reroute some battle stuff to get all of this running smoothly
and also to set the infrastructure to be used for other moves that do this same kinda stuff
python really is so powerful like this is still a rough draft, a proof of concept, if you will
just wait until someone steps up and optimizes all of this ...
what now

13 jul 2021
7:46- was playtesting and got a rrlicanth with a negative level
i thought it was a glitch or something but starter level determimation is determined
with a normal distribution centered on lvl 80
so negative numbers are unlikely but not entirely impossible
which kinda makes negative leveled pokemon rare like shinies!
nice

24 feb 2022
16:16- no updates to the game just wanted to comment on the fact that gamefreak
has decided to make the most dramatic changes to the pokemon battle system since like
the introduction of pokemon
I started this bc I was so familiar with that 25-yo system that I knew with enough
time and care I could replicate it at least kinda, in python.
And before I can even finish, gamefreak was like okay this is over
but whatever, im sure ill come back to this at some point

20 oct 2022
21:21- wrote the date just now and really couldn't believe it's been more than a year
like a year and a half...
that's.....unbelievable for me like it has not felt like a year plus
anyway I was reading this log earlier and I remembered I love this
mostly unrelated, I was trying to update python and I realized that my anaconda distro
took up like half of the space on my hard drive dedicated to linux and that's a little too much
so i went and deleted anaconda, figured I don't use most of those packages anyway
especially not on my personal laptop, where I also have access to like state-funded computing systems
and networks. I would personally install the few packages I do use, and everyone would say love
that was this morning and I spent all day troubleshooting my way to the goal
at one point I actually broke linux and literally had to abandon ship and 
reinstall linux. I had to download an iso of linux mint (took like 10 minutes to download)
and then I had to format my little usb flash drive and so I could burn the iso so i could 
boot a new, clean version of linux from the drive. it was literally so much work and it took so long
but I did it and then I had to install python AGAIN (and... git, ssh, pip,)
To install python from scratch you have 
to compile it like 3 times and each time takes just a little too long. And when python was finally
installed and worked, the modules i needed didn't!! it was troubleshooting and forum searching all the
way down. And each time I made a fix I had to recompile and reinstall python. It took,,, all day.
And I only log it because the first thing I did when it looked like everything had worked was
I started playing the game, and it was working (until I entered a blank and it crashed lol)
idk what's next...I was thinking I might completely overhaul battling
like it's been a little while I think I can spin something up

21 oct 2022
15:45- just changed the moves data from moves.py into a nump structured array instead of astropy table
trying to get rid of pesky astropy dependency. i'm mostly done, movedex.dat is now movdex2.txt and
I don't quite like it as much as the old one but its the only solution i've come up with so far
I also haven't edited the main code to reflect these new changes now so it might be broken
in fact i'd say its probably broken
commiting anyway xoxo

23 oct 2022
16:07- so it turns out i also used an astropy table for the pokedex
so I spent way too many hours just now making that numpy structured
this was actually dumbly more difficult than the transistion with the moves
the pokemon are loaded in as a (normal) numpy array from the csv file w/ the data
to make them structured each row needs to be encoded as a tuple so that the dtype-types
are appropriately assigned i guess idk it was broken for so long
but I fixed it now, played a quick game, and everything worked. I died quickly though
that mostly makes sense that my usage of mov and dex in pokemon.py work as both astropy tables and
np struct. arrays. the array['colomn name'] function is identical and that's the only fancy thing
I uses these data structures for. so theres that! woo!
I should be able to play on termux on my phone now
alright nice bye for now
17:38- okay so I went and added a whole bunch of easy normal type moves from A-H
also facade is new functionality but idk if the function necessarily works, it just hasnt broken the code yet
wanted to say that in battle the turn should end when a pokemon faints, but a non-fainted opposing pokemon
should go through end-of-round weatherchecks, counters, etc, before the next pokemon shifts in
(different from when a trainer opts to shift a pokemon as their move that turn)
okay cool bye again love you
17:55- forgot to program growth's double effect in sunny weather, did that and tested and approved

24 oct 2022
15:05- as fun as this is, it's never gonna be complete as long as Im soloing it
so my endgame is to create an Elite Four mode and get that working
it would entail 4 trainers, at least 4 poke each (and im thinking each has 4 predetermined moves and 2 random)
and a champion with at least 5 mons. You'd battle them all, in order like the namesake from the games
Of course, there are no rules/restrictions as to your pokemon, they can be legal and reasonable, or completely broken, illegal monsters
The whole point of this was playing with the mechanics of pokemon beyond what Gamefreak generally allows so go crazy
it'll be a good excuse to work in a whole lotta moves and mechanics. And it should demo the capabilities of this code
pretty well to anyone who is curious. If I can take this that far, I'd be satisfied to let someone(s) else take it from there
So I might never have to touch it again
And that really isn't too far off. I'd have to finalize whom makes the cut, decide on their movesets, and then the controlling factor
is how apt I am at implementing any (necessary) missing mechanics. If all the moves in all the Elite movesets work as intended,
the last part is coding up the mode itself, press L for elite four, first battle, okay you won here's the second battle, etc. champion finale
And that's gonna require me to modularize the battle mode entirely, because currently as a flat block of code that runs when you
press B, on the main menu, thats not gonna cut it for elite 4 mode.
any mechanics still missing (abilities, items, baton pass potentially etc.) will have to be filled in by the next python-using pokemon nerd.
Or maybe I'll do it 10 years later in a fit of boredom, its possible. But I'd like to be able to say this project reached some sort of completetion
see it's like a lot of work, but it's not crazy pie-in-the-sky kinda stuff its attainable but at the same time GIRTHY and TEXTURED
gonna set an abritrary release date so I have an artificial deadline so I actually do this stuff
Pokemon.py by Antoine - Beta release coming Holiday 2023 mark your calendars folks

27 oct 2022
18:13- I have pretty much decided on whom the champion will be, not gonna spoil it in the log
(it's a pretty basic choice tbh, like if you know basic pokemon lore you'd prob be able to guess)
(and also it'll be spoiled uhhh in the code, which is just as accessible as this log, so there)
i'm a sinnoh baby at heart so cynthia in the e4 very likely. prob with lucario, spiritomb, garchomp,
and maybe her milotic, that this was ANNOYING so yeah she's an icon
wait maybe I will give each of the four a legendary....yes I like this idea Cynthia needs a giratina
think Im gonna use this entry to brainstorm,,,, if that doesn't interest you move on hun
other champions: leon, kukui/hau, diantha(sp?), alder/iris, steven/wallace, lance, blue
yeah none of them are really inspiring me. maybe iris or diantha, gamefreak really gave Diantha NO shine
pulling from other e4s: *drasna - dragon from kalos, *caitlin - psychic from unova, flint - fire from sinnoh
koga - poison from johto, agatha - ghost from kanto, kahili - flying from alola, *molayne - steel from alola
so that's cool. I have leads and ideas. I think I wanted some non-e4 trainers in there too
Now Im thinking of rivals and team bosses, like so many characters have iconic pokemon and teams that a
fan would recognize. So maybe i'll build out this e4 mode with more preset trainers to battle
18:39- something else for someone else to deal with.....enemy trainer AI, I literally...dont know how to do that
I could definitely look into it. I think i'd have to write a program that could look at the current battle environment:
all the info of the trainer's pokemon, the opponent's (player's) pokemon available info (like level and type, but not ivs and evs),
the weather and terrain and rocks/spikes and stage changes, use that info to deduce the results of the cpu
choosing each of the pokemons moves (potentially a very large number) and shifting to one of its other party pokemon
(again potentially a very large number), rank all of those outcomes against one another,
and choose one based on that ranking
so like simple in theory and easy enough to write out but my man....im not all built like that

31 oct 2022
13:26- hallow's eve!
reconsidering the e4 bc I think I want N on it. more ideas: Silver, AZ (he used no gen 6 mons in XY?)
Zinnia from ORAS instead of AZ,  okay I think i like that lineup a lot more.
e4 will be Cynthia G4, N G5, Silver G2, and Zinnia G6. Champion is mans. So i have to decide about their
parties and their movesets. nice
17:35- added some moves in anticipation of e4 teams. Mostly completed the movesets of the champions mons
still need to program the effects of psystrike/shock, water spout, fake out (priority AND first-used move only), and screens for brick break
and the concept of healing for recover
so progress is being made but its slow, need to do this for 4 other teams and then program the mode
and now im sleepy so bye see you later
18:40- recover is functional now! will prob change the technicalities as we include more healing moves
also fixed a bug where double team boosts the oppo's evasion instead of the user
the recover thing also introduces a move that could very easily fail, which I should start tracking

1 nov 2022
11:35- i noticed that we check for status condition affliction in status moves but not in special/physical (attacking)
moves...which is very wrong. and having thought about it idt I've ever had a status condition inflicted from an attacking
move. which tracks. and the move() function is already so complicated and repeats a lot of code so there might be room in there
for optimization. but im not even there yet. I added synthesis a second ago. havent tested it yet
11:43- okay tested it, it works now. I want to do more moves (psystrike and water spout come to mind)
but I also really feel like I should modularize the battle feature, make weather and terrain an attribute of the battle class,
and rework literally everything from there as need be....but that's like....so much
12:05- i think we have psystrike now. would be kinda hard to test, but give me a second
12:19- tested psystrike cause I'm a legend. works fine
12:25- added psyshock and secret sword, scheming on body press and its variations (user phys. atk vs target spec. def)
12:37- nvm body press isnt what I thought it is, it uses the users phys def (instead of user's phys atk) to calc damage

2 nov 2022
14:44- here to report that i made up that thing about attacking moves not afflicting conditions, they def should,
that functionality isnt in the move() function but its in hit(), because target should only be afflicted if the move hit
and the target is not immune to the move
gonna work on water spout and its derivatives and maybe possibly modularizing poke battles
15:05- water spout and friends are here, tested, and working shoutout to me
15:27- started the battle renovations currently deciding how to make weather and terrain no longer global variables, and instead
attach them to the battle() or battlefield() classes, but before I go to deep Im gonna make a commit so we can easily reverse
should I break it
16:19- started figuring some of this stuff out, but I think I need spyder (been working a lot in vim) to rearrange large blocks of code
so Im gonna commit and switch oses so I can use spyder, codes probably broken
nvm just tested it and it works fine so far
17:12- uhh gonna do a quick commit because im starting to do some very unhinged things its getting sweaty in here
17:58- yeah its all coming together now, we might really be in the endgame sooner than I thought
it's gonna take a hot minute for me to parse through the battle code to make the tweaks where they need to be made
and also probably totally remake and refine things as I stumble onto them... here's a commit
also shout out to spyder she is really the workhorse behind this work Im just the stupid rider
18:59- trying to resist the urge to program priority while I'm here... since it looks like IM just gonna
marathon this whole thing without testing it, I might be REALLY pushing my luck with that one. but we'll see
20:09- ...i think i did it... i just need to rewrite all the code within move() hit() and damage() etc that
use global weather and terrain
20:58- terrains and weather don't work and probably also entry hazards
I think I see what ive done wrong now but thats only after thinking that another
thing was the problem and going through the code and changing things maybe unnessarily

3 nov 2022
10:03- no I really did it this time. It took some debugging, but I just got through a whole match and everything
worked as expected. I lost but that's fair I only had 1 Cyndaquil. But weather, terrains, and hazards all worked
when I tested them, so this is very extremely exciting I had been dreading doing this for so long
now I can go back to Elite 4 team making (making the moves for their mons, and then programming the teams altogether
and then loading those teams into battles against the player)
and then we can release. wow I really thought I was gonna need another year...
11:08- i got a 'maximum recursion depth exceeded' error just now trying to playtest
I looked it up, hardly understand what it means, but I think its just the the code is too big
and is trying to do too much in a single package, I can increase that limit, but its there
for a reason, so it looks like I may have to break some of these things up into separate files
its wild, im gonna commit
im soooo silly it was that I accidentally replaced the t.sleep() in micropause() with micropause() which
yes is definitely recursive
11:49- fixed checking the battle status/conditions by making it a function of battle()
really not sure what to do next, i guess priority
12:24- did priority, only quick attack for now though. fake out is going to take some more finesse/otherwise
useless booleans
14:41- I did fakeout. tested and it works so far, even for the cpu player. haven't tested the fact that
you should be able to use fakeout after returning a pokemon to the party and sending it out again
just thought about how i wrote that code and I think its broken, if you switch in as your turn that round,
ur pokemon will have fake out disabled for it even though it never got the chance to attack
14:57- okay i think I fixed it, seems to work now dk what's next
15:55- you can randomize your pokes movesets now, should think about how to remove moves
(how to let the user remove individual moves)
19:30- there's already a move deleter lol it's like right there, the fact that I could just overlook it
is a testament to how darn overboard I'm going
also I added the rest of the pre-gen 9 pokemon 1 commit ago. there are alt. forms I still can and want
to include in the presets, and i think I also want to add mega evolutions
i can do it by hand and thats prob the simplest solution, but thats a lot of work so maybe ill look into
ways to have that done automatically. (literally just the ~20 pokes I added between zamazenta and enamorus
took so long)
19:38- oh and im working on screens
23:33- okay it took almost literally just about the rest of my day but I did reflect and light screen
they were so much work and as usual I ran through implementing all of it everywhere in the code before testing
any of my work as I added it. so when I was ready to test everything kept breaking everywhere because
so much code was being ran for the very first time. I made a stupid '==' instead of '=' mistake that i am
regretful to report was responsible for a very strong bug, I tried to be fancy in counting down the screen timers
at the end of the turn and it just didnt work. so I am very plainly subtracting each one of them separately
the screen status wasn't reflected in the battle [s]tatus screen and I didnt know if that was because I wasnt
setting the screens right (that was the same issue with the == instead of = you see) or because I was doing
sloppy with my for loops iterating through the 2 screens (also that but we'll never know because I fixed that
issue and it was still broken bc of the other thing, maybe it was fine the other way I had it too)
yeah next we will go and break the screens with brick break, and defog, and psychic fangs
and then onto the rest of my elite four, finishing brick break finalizes all the moves for the champions team
okay bye love you still
23:41- oh and aurora veil...you know, while we're on the topic

4 nov 2022
08:57- knew I was forgetting something with screens and it was that I never turned them off
turned out to be easier to get rid of the flags and just use the counter, counters greater than 0 indicate
screen is up, p simple
09:12- it is a very side-track, out-of-the-way feature considering my endgame roadmap, but I should do multiple
party support. the player should be able to use and store multiple parties at the same time
an indefinite amount of pokemon can be loaded from a saved txt file into a single party,
(and then further played with and once again saved into whatever party the player wants), but to be able
to manage that in game would be like....sick. It's really easy for me, code-side, to make pokemon and stuff
them into parties (they are just plain old python lists after all) but coding in the capabilities for the user
to, while using, wield those same kinda powers sounds like a whole lotta loud
but I'm sure I could do it if I spent long enough on it so maybe that's our first post-release project/maybe I'll
work on it while procrastinating doing the endgame stuff
9:23- I'm gonna go through my book and list the moves we still need (I need to program) for the e4:
rollout, future sight, Core enforcer, thousands Arrows, Fusion Bolt, brick break, aqua ring, and mirror coat
BOY
....who is gonna do all of that......writing it down the first time I was like 'yeah,, I'll figure it out.'
I was more concerned about having to make battle(). but reading all of it back it looks DUUMB
11:39- i added defense curl in anticipation for rollout and i think I did rollout p much but I have no time to test it
so someone else do it
13:02- from what I could tell, rollout works, i havent ensured it works when the cpu uses it, but I believe it will
I'm sure it will unexpectantly break the code eventually if there are any problems
15:01- I started work on thousand arrows, so I've been thinking a lot more about grounding and ungrounding pokemon
which makes me want to add telekinesis and magnet rise. I actually think Im technically done with thousand arrowss
i just need to test it
15:12- and roost, takes away the flying type for the turn, could be weird if non-flying types are allowed to have it
15:55- spending so long on grounding flyings and making them susceptiple to ground type attacks
am making progress but the game just broke after using thousand arrows a second (time) first time didnt take
so here a commit, i'll be back
18:43- okay I finally got thousand arrows working as expected. I think there's room to introduce more generally that
any ungrounded pokemon are immune to ground type (this sets up this weird paradigm where flyings are only immune to ground
in that their flying-typing makes them ungrounded, if for whatever reason they become grounded. any grounded pokemon that can
find a way to unground itself gets that same ground immunity that flyings have. i havent tested that grounding condition is
reset upon being withdrawn, someone will one day im sure though
smack down, and gravity also grounds
19:15- I added all the remaining, new-mechanic moves in commented-out lines of moves.py so I know all what's left
i think mirror coat and coutner are gonna be the most annoying, the fusion moves will be weird, but it really just sounds like
another variable in field, that records whether and which of the fusion moves were executed every round
everytime I have to add something Im like 'does it really have to be this complicated?' and like the answer is yes,
everytime you battle in a post gen5, non-Lets Go, non-LA, non-BDSP, pokemon game, the game is tracking every turn
whether or not fusion bolt or fusion flare was executed, so that it knows whether or not to double the power
of any subsequent flares or bolts. such a small detail, but such is the nature of these pokemon battles, these mechanics were
built up game-by-game, and now this thing is a behemoth, but its still knowable
yo anyway I probably need a break from this but I want it finished like......so badly
19:45- and I am so close....like literally 5 moves separate me from the final sprint to the e4
for the record, the moves needed for the e4 that DON'T require new mechanics:
flash cannon, metal sound, night slash, crunch, acrobatics, stone edge, frost breath, zen headbutt
earth power, surf, psychic, silver wind, dark pulse, muddy water, thunder fang, fire fang, aeroblast
swift, Infernal parade, Bite, Air Cutter, Metal Claw, Icy Wind, Faint Attack, Shadow Claw
the nice things about those is it's mostly just me looking up their details, jotting down some stats,
and making money. All of these moves do things that other moves in this game already do
going through my notes again I missed some moves w new mechanics: shadow force (semi-invulnerable 2-turn) and 
Retaliate (double power if an ally fainted during the previous turn)
THEY are the annoying ones. that's where all the work happens. And then even when I work ALL of those moves in
there are still no abilities, no items, leech seed, protect etc., SO much to do
that's why I'm NOT committing to doing them lol, Im gonna make e4 and DIP

5 nov 2022
10:24- fixed some oversights with the physical attack nerf from burn that were never problems before
I hope they continue to not be a problem. and I added some more easy attacks
16:24- i added so many moves and it was only like half of all the moves I was trying to add
19:46- I finished adding the easy moves. it was so much...
remaining, the ~7 or so moves that need new mechanics, and setting up all the staging around
the e4 mode itself...generating the pokemon, putting them together and parties and
throwing them, and the player into battles! easy

6 nov 2022
11:05- there's a bug that occurs somewhere aroud line 15-something in battle() while
using trainerMoveInd to get the cpu to use a move after resetting the opponent's team to ur team
it may only be an issue after removing moves from your moveset...wait it might be that we delete moves
and dont delete the corresponding PP slots......dang let me check
yeah it looked like that was the issue. and i was able to finally test brick break and it looks like that
works, will have to add aurora veil and defog eventually but not now
11:36- aqua ring! here and tested
11:52- noticed i misread infernal parade's description, fixed it, also added hex
12:54- aurora veil, for some reason, very odd move

7 nov 2022
21:18- I am actually down to the last 5 moves: fusion bolt/flare (counting as 1), counter/mirror coat (also 1), future sight, shadow force, and retaliate
and i have no motivation or energy or imagination or intent to do any of them. like... i think I probably will eventually
but it used to be that there was something on my todo list that I was kinda interested in, i was inspired, I went and looked
about how it might work, I made some changes and additions, and the code would work and I'd have done it or the code would
have broken and I'd be spending a lot of time trying to fix it (and even in these cases, to date, i've always managed to fix it.
like we don't talk about it a lot but... i kinda popped off. look at the material.)
but anyway. Im down to these last five that are really annoying me, as concepts, so I dont wanna deal with them. Future sight needs another counter
or something. Fusion bolt and flare are mostly self-contained mechanics wise, so a lot of specific coding for not a lot of utility.
Counter and mc are looking like theyll be another in-battle attribute of mon() where we store the damage and
type of damage every pokemon takes every turn, so that we can call on that information if they happen to be using
mc or counter that turn. retaliate, similarly a store-battle-data move, where, I think, we keep an attribute for each side in battle() as to
whether or not a pokemon on that side fainted in the very most previous turn. Shadow force MIGHT be my way in. We already have 2-turns
and if I figure out this one, there's no reason we can't also have fly dig dive etc. and that's even more connected to current mechanics
with earthquake, surf, thunder/hurricane, etc. and that could be really fun. But even with that one...I don't wanna do it. like idk lol
no I'm sure someone will come by and finish all of this soon. bless them

10 nov 2022
08:54- gonna try to work on future sight, wish me luck
10:03- added future sight attributes to battlefield() class, and setting up a future sight in move()
still need to reduce counters every turn and devise method of attack/damage dealing, may use separate move
function, we'll see
not a separate move(), but maybe I will use damage() and hit() outside of the context of move(), which hardly happens
11:34- everybody give it up for future sight. 4 more to go
12:34- uh fusion bolt and flare are here and tested and approved. 3 more to go
13:24- can confirm that mirror coat works as expected, counter Im trusting works but didn't personally test
2 to go
15:34- i added retaliate and tried to test it but both of my opponents were ghost type and immune, so whatever
I think it works. realized that close combat still has the def nerf even when the target is immune, i think thats wrong
makes more sense to put stat stage changes in hit() so they dont run on immunities
like crush claw which lowers defense shouldnt lower defense if the target is literally immune yeah i gotta fix that
one more to go. ironically its the one I said I might do first of these last

