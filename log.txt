30 september 2020
decided to start a dedicated log
started work on a "pokedex" to store information for pokemon like stat details so they can be called upon in the code
ran into some trouble with getting astropy tables to let me store a numpy array in the table
found a work around but i don't like it
debating whether or not i like representing the pokemon types as numbers, especially directly to the player
but the numbers are very convenient for coding like...
bruh idk

4 october 2020
hello. added contact details for all the moves and updated the movedex
about to add more pokemon to the pokedex and set the main code so that it prints the pokedex on start up
lit we love a log hello future people.

5 october 2020
forgot to update the log.
threw some pokemon in the pokedex (the kanto starters and johto box mascots)
added pokedex functionality to the main code so players can use preset stats and typings
9:10PM- uhh guess we're doing times now
added a type table along with the pokedex, easy to print, kinda pretty to look at, and probably convenient for coding idk i already had the strings in a list so the type index <-> type string relation was already there but i made the table ANYWAY so here we are
10:08PM- added recoil damage :P

6 october 2020
12:26AM- started working on revamping the battling, especially stat stages...but obstensibly...everything else as well

10 october 2020
6:54PM- paralyzed pokemon have speed cuts, burned pokemon take attack cuts, pokemon may be fully paralyzed 25% of time, need to fo posion, current no moves in the game cause poison so theres that
i may have also worked out stat stages in battle, the move side of that is less developed
ugh
11:36PM- big changes
rearranged the battle code so it works better, i think idk i didnt get to test it, its not finished yet
i think most of it should work it's only a matter of cleaning up the end of turn things like poison damage, burn damage, etc.
implementation of these things is still not yet there
it's getting there
oh you can set the opponent's pokemon team now i think

11 october 2020
1:57AM- okay finished up a solid amount of work and now it's definitely broken
so that's cool can't wait to have to fix that
10:32A- battling mostly works now, still some bugs around pokemon faint/switch in that need to be resolved
mostly committing rn so i can work on this on not my cell phone
2:32P- ended up not fixing the battle problems at all and instead worked on the move tutor, pokedex selection, pokemon screen, etc.
cleaning up the UI, usage of b AND B to go back, getting generally handier with try except else blocks
lets get it
fixed sandstorm giving boost to ghost type instead of rock type lmao
9:06P- you can save and load pokemon now cause yeah i'm that serious about this
11:08P- uhh refined loading save files to catch bad file paths and incorrectly structered save files

14 october 2020
8:45P- maybe fixed the battling system? Idk i instituted some checks so that pokemon fainting and switch and the like goes smoothly.
i only tested it a little but it seemed like i fixed some bugs
really the only way to really test this is to REALLY play it...it's getting pretty complex at this point, especially with the save files...like you can get invested in this
too many
10:16P- programmed in paralysis burn and poison, though currently no moves cause poison

16 october 2020
7:39P- kinda did the damn thing with PP

17 october 2020
4:19P- okay just did a lot lemme think:
struggle
stat stages
can't switch to a pokemon that's already battling
that might be it, it doesn't look like a lot written down but i promise you it was a lot
gonna do a couple commits because im worried i maybe broke it somewhere
10:21P- wanted to document somewhere that there is distinctly an issue where the game checks for poison/burn/etc. damage even if the pokemon was just switched in...
gotta fix that

21 october 2020
bruh
added flinching
started refining pokemon battle architecture, really no idea where it's headed
but changes are definitely due
building a little team for cynthia including new moves so that's fun
we'll probably set up some sort of trainer variable to hold the opponent's name
lit
4:47P- don't even remember what I did tbh
finished cynthia's team
battled a couple of times, everything seems to flow
it's nice
uhh i think the next addition to the battling should be a "status" option
since stat stages should in theory work now it'd be nice to actually see them in action
i'm thinking we can show the user their pokemon's augmented, effective stats and everything
#EXPOSED
idk we'll see
5:15P- okay removed old/obsolete files from depository
also i forgot to note in that last note that i added tools to reset your team and remove unwanted pokemon
need to also add functionality to change leading pokemon
5:43P- okay added changing lead pokemon
still working and b and B for back :(

22 october 2020
11:04A- gotta add renaming pokemon
4:04P- gotta add ability to set battle stage: weather, terrain, etc.

23 october 2020
3:07P- didnt do any of the things I listed just yesterday, but accuracy and evasion stats have been implemented
4:01P- i keep just adding things, not testing the code, forgetting what i changed, and then assuming everything works
that preface was so i could say i added sandstorm and hail damage
i think also some fixed some bugs in the battle code that went covertly unnoticed
bro why did gamefreak do all this and why does it slap
like they got everybody hooked on this to where i'm hooked on emulating it
well hope this works

24 october 2020
11:57A- added weather moves and changing weather
8:58P- high critical hit ratio moves are implemented

26 october 2020
9:15P- yo revamped status conditions so that i dont need a separate block of code for moves with different chances of causing the various things they caused
i kinda just stole the method i had already devised for the stat changes, and like it works so let's put it to work idk
still havent tested any of this of course, also kinda not done, need to fix how recoil and flinch are implemented
it's mostly busy work honestly i still need to reorder the battling mechanics
and implement all the different moves.....leech seed has been in the back of my mind for so long...
anyway here's a commit, a proof of concept if you will

27 october 2020
8:50A- fixed recoil and bug new statuses, np.argwhere works better when its checking a numpy array, rather than just a list
but otherwise checking a numpy array (with its determined data type) for particular strings elicits python feedback that id rather avoid in the middle of battle
the solution is to make the notes list a np array when we need to run it through argwhere, elsewise leave it a lowly list
no i did not test the code

28 october 2020
3:14P- pi time, nice
edited the todo list to reflect recent additions
small edits to moves.py
dk where we're headed rn tbh but we're def gonna get there
3:44P- noting for the record that crits are supposed to ignore stat nerfs of attacker and stat boosts of target
someone'll get around to fixing that I'm sure
4:00P- reworking damage function rn to fix the critical hits:
crits occur within damage() which only takes a few pokemon attributes, and NOT their stat changes, so those aren't available for use to calculate critical hit damage
so we're redoing damage() to take the two pokemon entirely, not just some attributes, hope it doesn't kill this code
4:30P- done redoing damage() i hope
realized there's some ambiguity as to when things should go in hit() and when they should go in move()
hit() is only ever called in the end of move(), so anything that happens after hit() in move might as well have been appended to hit(), right?
is the choice arbitrary? is one better than the other? i really don't know team
anyway it still works i did actually test it this time
well tackle works so damage() is functional but who knows about umm...everything else in pokemon
5:07P- finished editing the log...lol
6:42P- priority moves..
7:02P- battling was in fact broken, physical moves worked, specials didn't because the burn variable was never defined
anyway terrains are in
not all the things that terrains affect i.e. causing sleep/confusion, priority..........
8:10P- okay terrains are mostly implemented wherever i could find to implement them
no priority moves yet for psychic terrain to prevent,
ugh earthquake is already in the game i can add that
okay i'll do that soon i guess
still no moves that cause confusion, so nothing to cause confusion, so nowhere to set misty terrain to prevent confusion
but we'll get to that soon i guess as well
tired
11:55P- reworked battling all the way, might be broken idk it looks like charmanders hp isnt recalculating after taking sandstorm damage for some reason
we'll fix it later

29 october 2020
8:43A- another day, another log entry for me to go overboard for
I have work to do today, otherwise battling system is coming along well
need to check for either trainer blackout immediately after moves are used and not after end of turn damages and weather are prompted
so we'll check for that after moves, if it is the case that neither trainer has blackout out, we can run switch in, after end turn damages, and even without checking for blackout then
alright..

30 october 2020
7:16P- didn't do that other things about checking for blackouts right after the moves are used
instead implemented terrain moves
feel like I keep saying terrains are mostly done and then documenting how terrains were even further integrated
idk they really are mostly done now, disregarding the things that just aren't in the code yet
7:52P- did the thing i wrote about yesterday, works p well
also properly implemented status moves causing status conditions
guess we'll move on to confusion/freeze/sleep? still need to program those
ugh they all need counters, i really lost
9:10P- tried to add some new moves, went and started tweaking inflicting status conditions (via status moves, not damaging moves)
thinking it'll prob be easier to make these callable functions
anyway i didn't quite finish, tried testing it, after inflicting luxray with sleep (which has no functionality yet) i tried inflicting poison, and bulbasaur used the move and that was it nothing more happened, especially not a "luxray already has a status condition, which I was expecting
anyway I'm tired I'll be back later bye future people
9:20P- moves.py wont work in terminal, (even though) the main code works it just fine, whatever goodbye again

2 november 2020
3:32P- we love a hiatus
gonna idk fix statuses i guess
4:27P- fixed that thing from the last log, moves.py not working and luxray not being poisoned were related,
accidentally included an extra 2 in the poison powder info
BOI
5:23P- moved around some things in the status moves status conditions
hopefully it works better but rn it seems like an evenly lateral move to me
idk this flow makes more sense to me lets hope thats because its more sensible
uhh i think the very next goal is to implement sleep, freeze, and badPoison
then i *think* i will be truly done with the main status conditions yas
6:34P- uhh sleep has a counter now, bad poison is maybe fully functional?
need to do freeze and sleep preventing move usage, and fixing all this implementation w damage-dealing moves
7:42P- status conditions may be done it depends on how much i forgot i still had to do
added toxic and maybe confuse ray is next we'll see if i can remember
idk gonna commit ttyl
8:11P- very fun and sexy of me to have forgotten to add confuse ray that quickly
anyway confuse ray is here now, she confuses, we livin
uhhh also fire moves used on mons need to dethaw them, certain fire moves (some of which are already in the game ie Flare Blitz) when used by a frozen mon, dethaws them
okay thats enough work for today bye yall

3 november 2020
7:34A- election day :(
last night i randomized the opponent movesets so thats fun!
its fun being hit w something other than tackle even though i died immediately
9:59A- fire moves thaw the target and flare blitz and flame wheel thaw a frozen user
it's lit
11:07A- made afflicting status a function of mon() now, so now move() and hit() call afflictStatuses() instead of doing all that work right there
i also rearranged the functions in mon() for my own sanity
5:37P- reorganized battling again in an effort to add having to rest after big moves like hyper beam blast burn etc.
actually tested the code, it seems to work
it's umm...how they say, lit..
11:07P- hey gossip girl, added moveInfo() function to show a neat description of a move
think this needs to be added to pokemon battles as well and maybe move tutor? we'll definitely see about it
anyway commiting this
11:50P- TIRED, cleaned up move info display implemented it in [P]okemon and in pokemon in battle and in being forced to switch out in battle because of a faint
so most places
move deleter should come next i think

4 november 2020
12:29A- move deleter is up and running now
very tired
1:11A- cleaned up a lot of the stuff and expanded move info to move tutor screen
so that's all very good
wanted to jot down a note here but i forgot it
9:30A- minor edits in places, tying up loose ends, bug fixes, etc
next big thing should be uhh either natures or weather ball or user set battle setting
idk i'll figure it out
10:15A- need to stop user from starting a battle if they have no non-fainted pokemon

6 nov 2020
5:25P- tags
gotta pop tags
cleaned up load pokemon to catch illegal levels and types
just realized I should be checking for negative numbers in ivs and evs as well
okay I'll be back i guess
6:02P- okay i'm back
controlled for negative levels, negative evs and ivs, and non-positive base stats
also got rid of a lot of the variables in loadMon() in general
actually i just thought about it and i could probably deal with files with 1 line and files with multiples lines in one go
the data is already inputted as a numpy array, i could easily reshape the 1D arrays into 2D,
to mirror how the multi-poke savefiles are already structured...a bunch of lines...
UGH okay i'll be back
6:14P- back again....
yeah loadMon() is looking _sleek_ now
don't know where I'm headed now?
uhh i wanted to show status conditions in the battle UI
so maybe that
I also wanted to implement more weather dependant moves
okay too many
7:44P- umm you can check on stat stages, status conditions, etc. in battle now with [s]
we love innovation
need more moves...

7 november 2020
5:21P- added weather ball
started working on the solar moves, and so as well the infrastructure for 2-turn moves
7:45P- think i figured out 2-turn moves for the user, but they are a little broken for opponents
also haven't properly figured out the pp-situation w/ 2-turns
but im tired now

9 november 2020
8:14A- not working on the code rn but pp exhaustion should go *in* move, this should help get the 2-turn mess in order
8:33P- shoutout to my past 12 hours yikes lol
gonna look into fixing 2-turn moves no promises
9:23P- bruh the way i just fixed 2-turn moves
still haven't fixed the PP though so watch out for those patch notes soon
10:17P- user can change battle conditions ie weather/terrain

10 november 2020
11:38A- nothing substantial, but im done testing 2turn moves for now i think, so opponent moves and now opponent pokemon are set to be randomized
11:05P- hi what's up
flinching was broken this whole time, I flipped a switch and forgot to unflip it
so pokemon that flinched once would flinch for every subsequent move
i think i fixed it but i didnt test it
I also did something else just now but who could ever recall
oh if you look at a pokemon's summary during a battle, it'll show their effective stats!
so if Bulbasaur's speed stat of 17 becomes like 28 or something after a dragon dance
and now you can just check the summary to check that out
it should also factor in paralysis speed cut, which would apply to pokemon in the party as well (non-battling pokemon don't have stat stages)
anyway I'm tired more work to do so maybe I'll be back later maybe I'll go to sleep
love my sudden use of capital I it's like I suddenly became self-aware in the middle of typing
11:14P- the way I went back to the code only to stare at it, not knowing what to do next

11 november 2020
12:40A- started on getting some more preset pokemon up in here
9:56A- pokemon appraisal is here, also check move info in the same place as selecting a move to use for battle
(lead with "i" or "I" and list whatever moves you wanna know about)
i did other things I think but who could ever know
10:45A- was gonna be finished after writing that last note but the i kept going
added all the pokemon sans Sword&Shield dlc thanks to the work of github user ryanluuwas
(https://github.com/ryanluuwas/Bulbapedia-Web-Scraper)
so that's p nice, i also *think* i fixed it so mons wont be randomly assigned struggle
it should work fine in theory if it's selected and intentionally used,
but it's a little weird for the opponent to throw it out randomly
and it's a 1PP move, whose PP is never exhausted so yeah it had to go
7:50P- added some bugs moves, figured id go through all the types and add whatever moves catch my eye on bulbapedia

22 november 2020
11:48A- I had so much homework...
when you make a pokemon through dex selection it takes on the level of the lead in your party now
i also tweaked the nursery so you give all 6 stats at once...efficiency
8:57P- started work on stealth rock...currently theres only the function of mon() doing stealth tock damage
no idea if it works the way i expect
I probably won't test it until we get some deeper implementation but heres a commit

24 november 2020
10:31A- yeah still haven't really tested anything of course
but i have added moves for the main entry hazards
one of the entry hazards is activated solely via g-max move so thats a little far off
i also started a battle class? dk if it's gonna be useful the way i think its gonna be useful
but im mainly using it to store variable about the battlefield
like it makes sense i think, I will need to work out how this new battle class will interact with
the pokemon class and all the pokemon functions and the like
i should be able to just name an instance of battle() when the player starts a battle and then refer to that same
instance within mon functions like move() right?
like who am i asking when I type all this out it reeks of insanity to me its so funny
alright goodnight

28 november 2020
12:12A- hey i was thinking about entry hazards
there's an issue where, in checking for entry hazrds, there's a need to differentiate
between which side of the field to check for a particular pokemon, and these mon objects
have no capability to store which side of the field they're on
so I'm thinking thats gonna have to be another mon attribute
wait i need to program transform.....i might be able to just copy the mon object no?
more questions for the wind...
12:26A- yeah in other news i fixed a bug with opponent reset where the opponent and the user share the user's pokemon
the solution was python deepcopy()s as opposed to flimsy old copy()s
so i think that works as intended now, i did test it
at some point I will put together more notable teams like i did with Cynthia
and implement them somehow, maybe in like an "Elite Four" mode kinda thing idk
but before I do that I'd want to have more moves programmed
and I feel like if I'm programming moves i should prioritize moves around which I can add yet another
mechanic of pokemon battling
because other moves, though relatively simple to add since the infrastucture already exists, won't push
the code to better emulating pokemon battles. Like who cares if there's Fire Fang, Fire Blast, Flamethrower
and Flare Blitz, if I couldn't figure out Spikes....or semi-invulnerable moves likes Fly and Dig
The semi-invulnerables also sorta give me a preemptive headache only because
they're practically 2-turn moves with an (almost) untouchable first turn
But 2-turn moves are already coded! So will I be able to build off of that and code
these semi-invulnerables as 2-turns with certain special additions?
or will the circumstances of the various 2-turn moves and their many effects
preclude (don't know if that's the right word but we're gonna roll with it) the use of
the pre-existing 2-turn move functionality?
Imagine you're like an anthropologist in like 4030 and you find an ancient github repository and
dig into it to find some grown man talking to himself and playing pokemon in one of the most
tumultuous times in recorded human history....what kinda paper would you write about that

15 january 2021
8:19P- first point of order: hey what's up it's been a while
second: BOY
third: i don't remember which of the many copies of this repo I have lying around is the most recent or what these changes I have staged for commit are so we're just gonna commit and hope for the best
fourth: hey what's up

13 march 2021
5:55P bro it's spring break
somewhere I added a move or something and the newest movedex.dat
(made when i ran the game directly from this repo) needs to be committed!
6:40P- I was looking at the damage calculation and I'm wondering if
I wanna leave open the possibilities of moves with mulitples types
there's only one such move officially, flying press and idk if that even made it to sword and shield?
But the point of this is to break te rules in places we other literally cannot
idk we'll see i still gotta figure out entry hazards
also i should use raise exception more with the error messages
i feel like it'd be cleaner

14 march 2021
1:27P- happy pi daylight saving time
worked on implementing entry hazards, very incomplete rn though
but I need to make a commit because I'm getting tired of looking at this
hopefully I fix it up with another commit soon because this will probably break the game
okay it at least starts running, no telling what happens when you try to play
6:11P- oh boy
got more done with entry hazards...i think i now just need to program in their various effects
most of the other infrastructure is down already its mostly
just adding some attributes to pokemon to do damage or lower speed etcetera

2 apr 2021
5:37P- hey
making progress with entry hazards
i think i'm almost done there's just a lot to do
i am having to add a whole new class and balancing all of its variables like...
this is for FUN
6:53P- stealth rock works
ostensibly all the other entry hazards work as intended
but i've yet to test that much
i still have work to do, poisons need to absorb toxic spikes
and generally i believe there are a lot of loose ends to tie up
but that it seems to work is promising i did that
what's next lol

3 apr 2021
10:35A- fixed some typos with entry hazards
and set grounded poison types to absorb tox spikes
i should do gravity/telekinesis next
sigh, i'll add it to the list

6 apr 2021
6:56P- not doing any coding i think
dropping in to say that telekinesis was removed in gen VIII
while gravity, and magnet rise are still around so that's interesting
the mechanics of those moves (really status effects) are a lot deeper
than i thought at first also like there is a lot to keep track of
also everytime I look into adding a new pokemon mechanic I am
more and more certain that we are never making it to double battles
honestly such a simple premise but utterly opaque when it comes to this python code I've got set up
(I feel very deep down that it won't even be that difficult to parse out.
the mechanics are almost already there, more pokemon just means intializing more mon() objects
but how they interact and how the code shepard's the user through is going to need to be adjusted)
okay that's enough writing about the things I want to do instead of just doing them for today
maybe i'll be back tomorrow, hopefully with some code

22 apr 2021
9:16A- i have so much homework you would not believe
but i'm going to test entry hazards more rigorously and see what i can see
9:47A- okay i tested stealth rocks and toxic spikes...they seem to work as intended
should probably start thinking about rapid spin and defog oof
idk why movedex.dat wants to be added to the commit bc i swear i didn't touch it
but whatever

